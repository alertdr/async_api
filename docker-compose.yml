version: "3.9"

services:
  web:
    container_name: django
    profiles: ["core", "all"]
    restart: always
    image: nesqui/django-app:latest
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_HOST=${DB_HOST}
      - DJANGO_SUPERUSER_USERNAME=${SUPERUSER}
      - DJANGO_SUPERUSER_PASSWORD=${SUPERUSER_PASS}
      - DJANGO_SUPERUSER_EMAIL=${SUPERUSER_EMAIL}
    volumes:
      - ./static:/usr/src/app/static
    networks:
      - apinetwork
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    profiles: ["core", "all"]
    image: postgres:${PG_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - apinetwork

  redis:
    container_name: redis
    profiles: ["core", "all"]
    image: redis:${REDIS_VERSION}-alpine
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis:/data
    networks:
      - apinetwork

  nginx:
    container_name: nginx
    profiles: ["core", "all"]
    image: nginx:${NGINX_VERSION}-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - ./static:/data/static
    depends_on:
      - web
    ports:
      - "80:80"
    networks:
      - apinetwork

  elasticsearch:
    container_name: elasticsearch
    profiles: ["core", "all"]
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ES_VERSION}
    restart: always
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms200m -Xmx200m
    networks:
      - apinetwork

  etl:
    container_name: etl
    profiles: ["core", "all"]
    image: nesqui/etl:latest
    restart: always
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - ES_HOSTS=${ES_HOSTS}
    depends_on:
      - elasticsearch
      - postgres
    networks:
      - apinetwork

  fastapi:
    container_name: fastapi
    profiles: ["core", "all"]
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - ELASTIC_HOST=${ELASTIC_HOST}
      - ELASTIC_PORT=${ELASTIC_PORT}
    networks:
      - apinetwork
    depends_on:
      - elasticsearch
      - redis

  kibana:
    container_name: kibana
    profiles: ["optional", "all"]
    image: docker.elastic.co/kibana/kibana-oss:${ES_VERSION}
    restart: always
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    networks:
      - apinetwork

  migrate-data:
    container_name: sqlite-postgres-migrate
    profiles: ["optional", "all"]
    image: nesqui/sqlite-postgres-migrate:latest
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
    networks:
      - apinetwork
    depends_on:
      - postgres

networks:
  apinetwork:
    driver: bridge
